version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: islamicnetwork/k8s-deployment
    docker:
      - image: circleci/buildpack-deps:stretch
  php74:
    docker:
      - image: islamicnetwork/php74
    working_directory: ~/repo

jobs:
  tag:
    docker:
      - image: cibuilds/github
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION="${CIRCLE_BUILD_NUM}"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ~/repo/
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Production Docker image
          command: docker build . -t $IMAGE_NAME:build --build-arg VERSION=$CIRCLE_TAG
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:build $IMAGE_NAME:$CIRCLE_TAG
            docker push $IMAGE_NAME:$CIRCLE_TAG
      - run:
          name: Install envsubst
          command: |
            sudo apt-get update && sudo apt-get -y install gettext-base
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
      - run:
          name: Deploy Code
          command: ./scripts/deploy.sh

workflows:
  version: 2
  build-master:
    jobs:
      - tag:
          context: org-global
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
      - build:
          context: org-global
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
